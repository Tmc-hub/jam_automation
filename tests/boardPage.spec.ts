import test, { expect } from "@playwright/test"

test.describe("Testing Jam-board", () => {
    test.beforeEach(async ({ page }) =>{
        await page.goto("https://jam.up.railway.app/login")
        const title = page.getByText("Login to your Account")
        await expect(title).toBeVisible()
        const userName = page.getByLabel("username")
        await expect(userName).toBeVisible()
        const passWord = page.getByLabel("password")
        await expect(passWord).toBeVisible()
        await (userName).fill("mrchocolate")
        await (passWord).fill("mrchocolate")
        const loginBtn = page.getByRole("button", {name:"Login"})
        await loginBtn.click()
    })
    test("create board", async ({page}) => {
        // const title = page.getByText("Login to your Account")
        // await expect(title).toBeVisible()
        // const userName = page.getByLabel("username")
        // await expect(userName).toBeVisible()
        // const passWord = page.getByLabel("password")
        // await expect(passWord).toBeVisible()
        // await (userName).fill("mrchocolate")
        // await (passWord).fill("mrchocolate")
        // const loginBtn = page.getByRole("button", {name:"Login"})
        // await loginBtn.click()
        const myBoards = page.locator("a", {hasText:"My Boards"})
        await expect(myBoards).toBeVisible()
        const creBoard = page.getByRole('button', {name:"Create Board"})
        await expect(creBoard).toBeVisible()
        await creBoard.click()
        const title2 = page.getByText('Create a New Board')
        await expect(title2).toBeVisible()
        const boardName = page.getByPlaceholder("Enter board name (max 30 characters)")
        await expect(boardName).toBeVisible()
        await boardName.fill("test")
        const boardDescrip = page.getByPlaceholder("Enter a short description (max 250 characters)")
        await expect(boardDescrip).toBeVisible()
        await boardDescrip.fill("test2")
        const createBrdBtn = page.getByRole('button', {name:"Create Board"})
        await createBrdBtn.click()
        const testboard = page.locator("h3", {hasText:"test"})
        await expect(testboard).toBeVisible()
        const testboard2 = page.locator("p", {hasText:"test2"})
        await expect(testboard2).toBeVisible()
        const deleteBtn = page.getByRole("button", {name:"bg-red-500 text-white p-2 rounded hover:bg-red-600 transition"})
        await expect(deleteBtn).toBeVisible()
        await deleteBtn.click()
        // const testboard = page.locator("h3", {hasText:"test"})
        // await expect(testboard).toBeVisible()
        // const testboarddescrip = page.locator("p", {hasText:"test2"})
        // await expect(testboarddescrip).toBeVisible()
    })
})

// test("create board page", async ({page}) =>{
//     const myBoards = page.locator("h1", {hasText:"My Boards"})
//     await expect(myBoards).toBeVisible()
//     const creBoard = page.getByRole('button', {name:"Create Board"})
//     await expect(creBoard).toBeVisible()
//     await (creBoard).click()
//     const title = page.getByText('Create a New Board')
//     await expect(title).toBeVisible()
//     const boardName = page.getByPlaceholder("Enter board name (max 30 characters)")
//     await expect(boardName).toBeVisible()
//     await boardName.fill("test")
//     const boardDescrip = page.getByPlaceholder("Enter a short description (max 250 characters)")
//     await expect(boardDescrip).toBeVisible()
//     await boardDescrip.fill("test2")
//     const createBrdBtn = page.getByRole('button', {name:"Create Board"})
//     await (createBrdBtn).click()
// })

// test("assign users", async ({page}) =>{
//     const addU = page.locator("path", {hasText: "M624 208h-64v"})
//     await expect(addU).toBeVisible()
//     await (addU).click()
//     const AddU2Brd = page.getByText("Add User to Board")
//     await expect(AddU2Brd).toBeVisible()
//     const search4U = page.getByPlaceholder("Search for users...")
//     await expect(search4U).toBeVisible()
//     await search4U.fill("mr")
//     const testUser = page.locator("span", {hasText: "pine@gmail.com"})

// })